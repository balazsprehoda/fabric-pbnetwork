version: '2'

networks:
  onlab:

services:

###########
# orderer #
###########

  orderer.pbnetwork.com:
    container_name: orderer.pbnetwork.com
    image: hyperledger/fabric-orderer
    environment:
      - GOPATH=/home/prehoda/go
      - FABRIC_LOGGING_SPEC=debug
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/etc/hyperledger/configtx/genesis.block
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/etc/hyperledger/msp/orderer/
      - ORDERER_GENERAL_LOGLEVEL=DEBUG
      # enabled TLS
      # - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_ENABLED=false
      # - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      # - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      # - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      - ORDERER_KAFKA_TOPIC_REPLICATIONFACTOR=1
      - ORDERER_KAFKA_VERBOSE=true
    working_dir: $GOPATH/src/github.com/hyperledger/fabric/orderer
    command: orderer
    ports:
      - 7050:7050
    volumes:
        - ./channel-artifacts/:/etc/hyperledger/configtx
        - ./crypto-config/ordererOrganizations/pbnetwork.com/orderers/orderer.pbnetwork.com/:/etc/hyperledger/msp/orderer
        - ./crypto-config/peerOrganizations/org1.pbnetwork.com/peers/peer0.org1.pbnetwork.com/:/etc/hyperledger/msp/peerOrg1
    networks:
      - onlab

#########
# peers #
#########

  peer0.org1.pbnetwork.com:
    container_name: peer0.org1.pbnetwork.com
    image: hyperledger/fabric-peer
    environment:
      - GOPATH=/home/prehoda/go
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_onlab
      # - FABRIC_LOGGING_SPEC=INFO
      - FABRIC_LOGGING_SPEC=DEBUG
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_ENABLED=false
      # - CORE_PEER_TLS_ENABLED=true
      # - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      # - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      # - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      - CORE_PEER_ID=peer0.org1.pbnetwork.com
      - CORE_PEER_ADDRESS=peer0.org1.pbnetwork.com:7051
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.org1.pbnetwork.com:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.org1.pbnetwork.com:7051
      - CORE_PEER_LOCALMSPID=Org1MSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer1
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb.org1.pbnetwork.com:5984
      # The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
      # provide the credentials for ledger to connect to CouchDB.  The username and password must
      # match the username and password set for the associated CouchDB.
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
    volumes:
      - /var/run/:/host/var/run/
      - ./crypto-config/peerOrganizations/org1.pbnetwork.com/peers/peer0.org1.pbnetwork.com/msp/:/etc/hyperledger/msp/peer1
      - ./crypto-config/peerOrganizations/org1.pbnetwork.com/users/:/etc/hyperledger/msp/users1
    working_dir: $GOPATH/src/github.com/hyperledger/fabric
    command: peer node start
    depends_on:
      - couchdb.org1.pbnetwork.com
      - orderer.pbnetwork.com
    ports:
      - 7051:7051
      - 7053:7053
    networks:
      - onlab

  peer0.org2.pbnetwork.com:
    container_name: peer0.org2.pbnetwork.com
    image: hyperledger/fabric-peer
    environment:
      - GOPATH=/home/prehoda/go
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_onlab
      # - FABRIC_LOGGING_SPEC=INFO
      - FABRIC_LOGGING_SPEC=DEBUG
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_ENABLED=false
      # - CORE_PEER_TLS_ENABLED=true
      # - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      # - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      # - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      - CORE_PEER_ID=peer0.org2.pbnetwork.com
      - CORE_PEER_ADDRESS=peer0.org2.pbnetwork.com:7051
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.org2.pbnetwork.com:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.org2.pbnetwork.com:7051
      - CORE_PEER_LOCALMSPID=Org2MSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer2
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb.org2.pbnetwork.com:5984
      # The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
      # provide the credentials for ledger to connect to CouchDB.  The username and password must
      # match the username and password set for the associated CouchDB.
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
    volumes:
      - /var/run/:/host/var/run/
      - ./crypto-config/peerOrganizations/org2.pbnetwork.com/peers/peer0.org2.pbnetwork.com/msp:/etc/hyperledger/msp/peer2
      - ./crypto-config/peerOrganizations/org2.pbnetwork.com/users/:/etc/hyperledger/msp/users2
    working_dir: $GOPATH/src/github.com/hyperledger/fabric
    command: peer node start
    depends_on:
      - couchdb.org2.pbnetwork.com
      - orderer.pbnetwork.com
    ports:
      - 8051:7051
      - 8053:7053
    networks:
      - onlab

  peer0.org3.pbnetwork.com:
    container_name: peer0.org3.pbnetwork.com
    image: hyperledger/fabric-peer
    environment:
      - GOPATH=/home/prehoda/go
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_onlab
      # - FABRIC_LOGGING_SPEC=INFO
      - FABRIC_LOGGING_SPEC=DEBUG
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_TLS_ENABLED=false
      # - CORE_PEER_TLS_ENABLED=true
      # - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      # - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      # - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      - CORE_PEER_ID=peer0.org3.pbnetwork.com
      - CORE_PEER_ADDRESS=peer0.org3.pbnetwork.com:7051
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.org3.pbnetwork.com:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.org3.pbnetwork.com:7051
      - CORE_PEER_LOCALMSPID=Org3MSP
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/peer3
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb.org3.pbnetwork.com:5984
      # The CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME and CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD
      # provide the credentials for ledger to connect to CouchDB.  The username and password must
      # match the username and password set for the associated CouchDB.
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
    volumes:
      - /var/run/:/host/var/run/
      - ./crypto-config/peerOrganizations/org3.pbnetwork.com/peers/peer0.org3.pbnetwork.com/msp:/etc/hyperledger/msp/peer3
      - ./crypto-config/peerOrganizations/org3.pbnetwork.com/users:/etc/hyperledger/msp/users3
    working_dir: $GOPATH/src/github.com/hyperledger/fabric
    command: peer node start
    depends_on:
      - orderer.pbnetwork.com
      - couchdb.org3.pbnetwork.com
    ports:
      - 9051:7051
      - 9053:7053
    networks:
      - onlab

###########
# CouchDB #
###########

  couchdb.org1.pbnetwork.com:
    container_name: couchdb.org1.pbnetwork.com
    image: hyperledger/fabric-couchdb
    # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
    # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
    environment:
      - COUCHDB_USER=
      - COUCHDB_PASSWORD=
    ports:
      - 5984:5984
    networks:
      - onlab

  couchdb.org2.pbnetwork.com:
    container_name: couchdb.org2.pbnetwork.com
    image: hyperledger/fabric-couchdb
    # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
    # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
    environment:
      - COUCHDB_USER=
      - COUCHDB_PASSWORD=
    ports:
      - 5985:5984
    networks:
      - onlab

  couchdb.org3.pbnetwork.com:
    container_name: couchdb.org3.pbnetwork.com
    image: hyperledger/fabric-couchdb
    # Populate the COUCHDB_USER and COUCHDB_PASSWORD to set an admin user and password
    # for CouchDB.  This will prevent CouchDB from operating in an "Admin Party" mode.
    environment:
      - COUCHDB_USER=
      - COUCHDB_PASSWORD=
    ports:
      - 6984:5984
    networks:
      - onlab

#######
# cli #
#######

  cli:
    container_name: cli
    image: hyperledger/fabric-tools
    tty: true
    stdin_open: true
    environment:
      - GOPATH=/home/prehoda/go
      - PATH=$PATH:$GOPATH/src/github.com/hyperledger/fabric/peer/scripts
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - FABRIC_LOGGING_SPEC=DEBUG
      # - FABRIC_LOGGING_SPEC=INFO
      - CORE_PEER_ID=cli
      - CORE_PEER_ADDRESS=peer0.org1.pbnetwork.com:7051
      - CORE_PEER_LOCALMSPID=Org1MSP
      # - CORE_PEER_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_ENABLED=false
      # - CORE_PEER_TLS_CERT_FILE=$GOPATH/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.pbnetwork.com/peers/peer0.org1.pbnetwork.com/tls/server.crt
      # - CORE_PEER_TLS_KEY_FILE=$GOPATH/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.pbnetwork.com/peers/peer0.org1.pbnetwork.com/tls/server.key
      # - CORE_PEER_TLS_ROOTCERT_FILE=$GOPATH/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.pbnetwork.com/peers/peer0.org1.pbnetwork.com/tls/ca.crt
      - CORE_PEER_MSPCONFIGPATH=$GOPATH/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.pbnetwork.com/users/Admin@org1.pbnetwork.com/msp
      #- CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/msp/users1/Admin@org1.pbnetwork.com/msp
      - CORE_CHAINCODE_KEEPALIVE=10
    working_dir: $GOPATH/src/github.com/hyperledger/fabric/peer
    # command: /bin/bash
    volumes:
      - /var/run/:/host/var/run/
      - ./chaincode/:$GOPATH/src/github.com/chaincode
      # - ./chaincode/:$GOPATH/src/github.com/hyperledger/fabric/peer/chaincode
      - ./crypto-config:$GOPATH/src/github.com/hyperledger/fabric/peer/crypto/
      - ./scripts:$GOPATH/src/github.com/hyperledger/fabric/peer/scripts/
      - ./channel-artifacts:$GOPATH/src/github.com/hyperledger/fabric/peer/channel-artifacts
      # - $GOPATH/src/github.com/hyperledger/fabric:$GOPATH/src/github.com/hyperledger/fabric
    depends_on:
      - orderer.pbnetwork.com
      - peer0.org1.pbnetwork.com
      - peer0.org2.pbnetwork.com
      - peer0.org3.pbnetwork.com
    networks:
      - onlab
